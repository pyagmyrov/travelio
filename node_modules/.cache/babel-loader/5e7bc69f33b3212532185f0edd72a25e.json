{"ast":null,"code":"var _jsxFileName = \"/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n\n  const [todayCase, setTodayCase] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const SearchCovid = () => {\n    // GET request using fetch with error handling\n    fetch('https://corona.lmao.ninja/v2/countries/'.concat(country + '?yesterday=true')).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response statusText\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      setTodayCase(data.todayCases);\n      searchCity();\n    }).catch(error => {\n      setError(error.toString());\n      console.error('There was an error!', error);\n    });\n  };\n\n  const options = [{\n    value: 'Romania',\n    label: 'Romania'\n  }, {\n    value: 'Turkey',\n    label: 'Turkey'\n  }, {\n    value: 'Italy',\n    label: 'Italy'\n  }];\n  const [country, setCountry] = useState(\"\");\n\n  const handleChange = e => {\n    setCountry(e.value);\n  };\n\n  const searchCity = () => {\n    fetch(\"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country), {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n        \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\"\n      }\n    }).then(async response => {\n      const data = await response.json();\n      console.log(data);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: handleChange.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }, this), console.log(country), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SearchCovid,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Today's Case: \", todayCase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainPage, \"J4m99F2BUnjEka/eaDzwM/rJ/aY=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js"],"names":["React","useState","Select","MainPage","todayCase","setTodayCase","error","setError","SearchCovid","fetch","concat","country","then","response","data","json","ok","message","statusText","Promise","reject","todayCases","searchCity","catch","toString","console","options","value","label","setCountry","handleChange","e","log","err","bind"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAIA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BJ,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACtB;AACAC,IAAAA,KAAK,CAAC,0CAA0CC,MAA1C,CAAiDC,OAAO,GAAG,iBAA3D,CAAD,CAAL,CACKC,IADL,CACU,MAAMC,QAAN,IAAkB;AACpB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB,CADoB,CAGpB;;AACA,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AACd;AACA,cAAMV,KAAK,GAAIQ,IAAI,IAAIA,IAAI,CAACG,OAAd,IAA0BJ,QAAQ,CAACK,UAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAed,KAAf,CAAP;AACH;;AAEDD,MAAAA,YAAY,CAAES,IAAI,CAACO,UAAP,CAAZ;AACAC,MAAAA,UAAU;AACb,KAbL,EAcKC,KAdL,CAcWjB,KAAK,IAAI;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACkB,QAAN,EAAD,CAAR;AACAC,MAAAA,OAAO,CAACnB,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KAjBL;AAkBH,GApBD;;AAsBA,QAAMoB,OAAO,GAAG,CACZ;AAAEC,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GADY,EAEZ;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAFY,EAGZ;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAHY,CAAhB;AAMA,QAAM,CAACjB,OAAD,EAAUkB,UAAV,IAAwB5B,QAAQ,CAAC,EAAD,CAAtC;;AAGA,QAAM6B,YAAY,GAAIC,CAAD,IAAK;AACtBF,IAAAA,UAAU,CAACE,CAAC,CAACJ,KAAH,CAAV;AACH,GAFD;;AAID,QAAML,UAAU,GAAG,MAAK;AACvBb,IAAAA,KAAK,CAAC,yDAAyDC,MAAzD,CAAgEC,OAAhE,CAAD,EAA2E;AAC5E,gBAAU,KADkE;AAE5E,iBAAW;AACP,0BAAkB,oDADX;AAEP,2BAAmB;AAFZ;AAFiE,KAA3E,CAAL,CAOCC,IAPD,CAOM,MAAMC,QAAN,IAAkB;AACpB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACAU,MAAAA,OAAO,CAACO,GAAR,CAAYlB,IAAZ;AACH,KAVD,EAWCS,KAXD,CAWOU,GAAG,IAAI;AACVR,MAAAA,OAAO,CAACnB,KAAR,CAAc2B,GAAd;AACH,KAbD;AAcA,GAfD;;AAiBC,sBACI;AAAA,4BACD,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP,OAAjB;AAA0B,MAAA,QAAQ,EAAEI,YAAY,CAACI,IAAb,CAAkB,IAAlB;AAApC;AAAA;AAAA;AAAA;AAAA,YADC,EAEAT,OAAO,CAACO,GAAR,CAAYrB,OAAZ,CAFA,eAGD;AAAQ,MAAA,OAAO,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHC,eAID;AAAA,mCAAmBJ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJC;AAAA,kBADJ;AAQH,CAhEM;;GAAMD,Q;;KAAAA,Q;AAmEb,eAAeA,QAAf","sourcesContent":["\nimport React, { useState } from \"react\";\nimport Select from 'react-select'\n\n\n\nexport const MainPage = () => {\n    const [todayCase,setTodayCase] = useState(\"\")\n    const [error,setError] = useState(\"\")\n    \n    const SearchCovid = () => {\n        // GET request using fetch with error handling\n        fetch('https://corona.lmao.ninja/v2/countries/'.concat(country + '?yesterday=true'))\n            .then(async response => {\n                const data = await response.json();\n    \n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response statusText\n                    const error = (data && data.message) || response.statusText;\n                    return Promise.reject(error);\n                }\n    \n                setTodayCase( data.todayCases)\n                searchCity();\n            })\n            .catch(error => {\n                setError(error.toString());\n                console.error('There was an error!', error);\n            });\n    }\n\n    const options = [\n        { value: 'Romania', label: 'Romania' },\n        { value: 'Turkey', label: 'Turkey' },\n        { value: 'Italy', label: 'Italy' }\n      ]\n      \n    const [country, setCountry] = useState(\"\");\n \n\n    const handleChange = (e)=>{\n        setCountry(e.value);\n    }\n\n   const searchCity = () =>{\n    fetch(\"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country), {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-key\": \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n            \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\"\n        }\n    })\n    .then(async response => {\n        const data = await response.json();\n        console.log(data)\n    })\n    .catch(err => {\n        console.error(err);\n    });\n   }\n\n    return (\n        <>\n       <Select options={options} onChange={handleChange.bind(this)}/>\n       {console.log(country)}\n       <button onClick={SearchCovid}>Search</button>\n       <h1>Today's Case: {todayCase}</h1>\n    </>\n    )\n}\n\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}