{"ast":null,"code":"var _jsxFileName = \"/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport options from \"../context/countries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n\n  const [todayCase, setTodayCase] = useState(\"\");\n  const [cities, setCities] = useState([]);\n  var cityNames = [];\n  const [city, setCity] = useState(\"\");\n  const [hotels, setHotels] = useState([]);\n  const [country, setCountry] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  const SearchCovid = () => {\n    // GET request using fetch with error handling\n    fetch(\"https://corona.lmao.ninja/v2/countries/\".concat(country + \"?yesterday=true\")).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      setTodayCase(data.todayCases);\n      searchCity();\n    }).catch(error => {\n      setError(error.toString());\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  const handleChange = e => {\n    setCountry(e.value);\n  };\n\n  const searchCity = () => {\n    fetch(\"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country), {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n        \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\"\n      }\n    }).then(async response => {\n      const data = await response.json();\n      setCities(data.suggestions[0].entities);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const searchHotel = () => {\n    fetch(\"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(city), {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n        \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\"\n      }\n    }).then(async response => {\n      const data = await response.json();\n      setHotels(data.suggestions[1].entities);\n      hotels.map((hotel, index) => {\n        console.log(index, hotel.name);\n      });\n      searchWeather();\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const searchWeather = () => {\n    fetch(\"api.openweathermap.org/data/2.5/weather?q=\".concat(city + \"&units=metric&appid=43b811164160ccdbae3ecc18fe414287\"), {\n      method: \"GET\"\n    }).then(async response => {\n      console.log(response); // const data = await response.json();\n\n      setWeather(response.main.temp);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleCity = index => {\n    setCity(cities[index].name);\n    console.log(city);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: handleChange.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SearchCovid,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Today's Case: \", todayCase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCity(index),\n          children: city.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, city.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchHotel,\n      children: \"SearchHotel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hotels.map((hotel, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: hotel.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, hotel.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainPage, \"cO7I30rm8EWdQERB+HIbkyTZo7M=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js"],"names":["React","useState","Select","options","MainPage","todayCase","setTodayCase","cities","setCities","cityNames","city","setCity","hotels","setHotels","country","setCountry","error","setError","weather","setWeather","SearchCovid","fetch","concat","then","response","data","json","ok","message","statusText","Promise","reject","todayCases","searchCity","catch","toString","console","handleChange","e","value","method","headers","suggestions","entities","err","searchHotel","map","hotel","index","log","name","searchWeather","main","temp","handleCity","bind"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport options from \"../context/countries\";\n\nexport const MainPage = () => {\n  const [todayCase, setTodayCase] = useState(\"\");\n  const [cities, setCities] = useState([]);\n  var cityNames = [];\n  const [city, setCity] = useState(\"\");\n  const [hotels, setHotels] = useState([]);\n  const [country, setCountry] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  const SearchCovid = () => {\n    // GET request using fetch with error handling\n    fetch(\n      \"https://corona.lmao.ninja/v2/countries/\".concat(\n        country + \"?yesterday=true\"\n      )\n    )\n      .then(async (response) => {\n        const data = await response.json();\n\n        if (!response.ok) {\n          const error = (data && data.message) || response.statusText;\n          return Promise.reject(error);\n        }\n\n        setTodayCase(data.todayCases);\n        searchCity();\n      })\n      .catch((error) => {\n        setError(error.toString());\n        console.error(\"There was an error!\", error);\n      });\n  };\n\n  const handleChange = (e) => {\n    setCountry(e.value);\n  };\n\n  const searchCity = () => {\n    fetch(\n      \"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country),\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n          \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\",\n        },\n      }\n    )\n      .then(async (response) => {\n        const data = await response.json();\n        setCities(data.suggestions[0].entities);\n       \n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const searchHotel = () => {\n    fetch(\n      \"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(city),\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n          \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\",\n        },\n      }\n    )\n      .then(async (response) => {\n        const data = await response.json();\n        setHotels(data.suggestions[1].entities);\n        hotels.map((hotel, index) => {\n          console.log(index, hotel.name);\n        });\n        searchWeather();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n\n  const searchWeather = ()=>{\n    fetch(\n      \"api.openweathermap.org/data/2.5/weather?q=\".concat(city + \"&units=metric&appid=43b811164160ccdbae3ecc18fe414287\"), \n      {\n        method: \"GET\",\n       \n      }\n    )\n      .then(async (response) => {\n        console.log(response)\n        // const data = await response.json();\n       setWeather(response.main.temp)\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const handleCity = (index) => {\n   setCity(cities[index].name)\n   console.log(city)\n  };\n\n  return (\n    <>\n      <Select options={options} onChange={handleChange.bind(this)} />\n     \n      <button onClick={SearchCovid}>Search</button>\n      <h1>Today's Case: {todayCase}</h1>\n\n        <div>\n          {cities.map((city,index)=>\n          <span key ={city.name}>\n            <div onClick={()=>handleCity(index)}>\n              {city.name}\n            </div>\n          </span>\n          )}\n        </div>\n        <button onClick={searchHotel}>SearchHotel</button>\n        <div>\n          {hotels.map((hotel,index)=>\n          <span key ={hotel.name}>\n            <div>\n              {hotel.name}\n            </div>\n          </span>\n          )}\n        </div>\n        <div>\n          {weather}\n        </div>\n\n   \n    </>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}