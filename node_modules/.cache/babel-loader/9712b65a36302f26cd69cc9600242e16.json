{"ast":null,"code":"var _jsxFileName = \"/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SelectSearch from 'react-select-search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [country, setCountry] = useState(\"\");\n  const options = [{\n    name: 'Swedish',\n    value: 'sv'\n  }, {\n    name: 'English',\n    value: 'en'\n  }, {\n    type: 'group',\n    name: 'Group name',\n    items: [{\n      name: 'Spanish',\n      value: 'es'\n    }]\n  }];\n\n  const CustomSelect = ({\n    options,\n    value,\n    multiple,\n    disabled\n  }) => {\n    _s();\n\n    const [snapshot, valueProps, optionProps] = useSelect({\n      options,\n      value,\n      multiple,\n      disabled\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", { ...valueProps,\n        children: snapshot.displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), snapshot.focus && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: snapshot.options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", { ...optionProps,\n            value: option.value,\n            children: option.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  };\n\n  _s(CustomSelect, \"os4Alxwa7ojz4ja8uky0u4+AJ8s=\", true);\n};\n\n_s2(MainPage, \"57wSl0D2OYpiOrvnunbC6wPJe7w=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js"],"names":["React","useState","SelectSearch","MainPage","country","setCountry","options","name","value","type","items","CustomSelect","multiple","disabled","snapshot","valueProps","optionProps","useSelect","displayValue","focus","map","option"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAIA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMK,OAAO,GAAG,CACZ;AAACC,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADY,EAEZ;AAACD,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAFY,EAGZ;AACIC,IAAAA,IAAI,EAAE,OADV;AAEIF,IAAAA,IAAI,EAAE,YAFV;AAGIG,IAAAA,KAAK,EAAE,CACH;AAACH,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KADG;AAHX,GAHY,CAAhB;;AAYA,QAAMG,YAAY,GAAG,CAAC;AAAEL,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBI,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,GAAD,KAA4C;AAAA;;AAC7D,UAAM,CAACC,QAAD,EAAWC,UAAX,EAAuBC,WAAvB,IAAsCC,SAAS,CAAC;AAClDX,MAAAA,OADkD;AAElDE,MAAAA,KAFkD;AAGlDI,MAAAA,QAHkD;AAIlDC,MAAAA;AAJkD,KAAD,CAArD;AAOJ,wBACI;AAAA,8BACA,uBAAYE,UAAZ;AAAA,kBAAyBD,QAAQ,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,cADA,EAECJ,QAAQ,CAACK,KAAT,iBACG;AAAA,kBACKL,QAAQ,CAACR,OAAT,CAAiBc,GAAjB,CAAsBC,MAAD,iBAClB;AAAA,iCACI,uBAAYL,WAAZ;AAAyB,YAAA,KAAK,EAAEK,MAAM,CAACb,KAAvC;AAAA,sBAA+Ca,MAAM,CAACd;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ,WAASc,MAAM,CAACb,KAAhB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAtBG;;AAd0B,KAcpBG,YAdoB;AAqC7B,CArCM;;IAAMR,Q;;KAAAA,Q;AAuCb,eAAeA,QAAf","sourcesContent":["\nimport React, { useState } from \"react\";\nimport SelectSearch from 'react-select-search';\n\n\n\nexport const MainPage = () => {\n    const [country, setCountry] = useState(\"\");\n    const options = [\n        {name: 'Swedish', value: 'sv'},\n        {name: 'English', value: 'en'},\n        {\n            type: 'group',\n            name: 'Group name',\n            items: [\n                {name: 'Spanish', value: 'es'},\n            ]\n        },\n    ];\n\n    const CustomSelect = ({ options, value, multiple, disabled }) => {\n        const [snapshot, valueProps, optionProps] = useSelect({\n            options,\n            value,\n            multiple,\n            disabled,\n        });\n\n    return (\n        <div>\n        <button {...valueProps}>{snapshot.displayValue}</button>\n        {snapshot.focus && (\n            <ul>\n                {snapshot.options.map((option) => (\n                    <li key={option.value}>\n                        <button {...optionProps} value={option.value}>{option.name}</button>\n                    </li>\n                ))}\n            </ul>\n        )}\n    </div>\n    )\n}\n}\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}