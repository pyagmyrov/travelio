{"ast":null,"code":"var _jsxFileName = \"/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useMemo, useState } from \"react\";\nimport { UserContext } from \"../context/core\";\nimport Select from \"react-select\";\nimport countryList from 'react-select-country-list'; // import options from \"../context/countries\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n\n  const options = useMemo(() => countryList().getData(), []);\n\n  const changeHandler = value => {\n    setValue(value);\n  };\n\n  const {\n    todayCase,\n    setTodayCase,\n    cities,\n    setCities,\n    city,\n    setCity,\n    hotels,\n    setHotels,\n    country,\n    setCountry,\n    cityNames,\n    error,\n    setError,\n    weather,\n    setWeather,\n    SearchCovid,\n    handleChange,\n    searchCity,\n    handleCity,\n    searchHotel,\n    searchWeather\n  } = useContext(UserContext); // const [todayCase, setTodayCase] = useState(\"\");\n  // const [cities, setCities] = useState([]);\n  // var cityNames = [];\n  // const [city, setCity] = useState(\"\");\n  // const [hotels, setHotels] = useState([]);\n  // const [country, setCountry] = useState(\"\");\n  // const [error, setError] = useState(\"\");\n  // const [weather, setWeather] = useState(\"\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: handleChange.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SearchCovid,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Today's Case: \", todayCase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCity(index),\n          children: city.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, city.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchHotel,\n      children: \"SearchHotel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hotels.map((hotel, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: hotel.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, hotel.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"temp in \", city, \": \", weather]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainPage, \"zhorqCyff7660m/7oOsPEj5Ns7g=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js"],"names":["React","useContext","useMemo","useState","UserContext","Select","countryList","MainPage","options","getData","changeHandler","value","setValue","todayCase","setTodayCase","cities","setCities","city","setCity","hotels","setHotels","country","setCountry","cityNames","error","setError","weather","setWeather","SearchCovid","handleChange","searchCity","handleCity","searchHotel","searchWeather","bind","map","index","name","hotel"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE5B,QAAMC,OAAO,GAAGN,OAAO,CAAC,MAAMI,WAAW,GAAGG,OAAd,EAAP,EAAgC,EAAhC,CAAvB;;AAEA,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAIA,QAAM;AACJE,IAAAA,SADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA,SARI;AASJC,IAAAA,OATI;AAUJC,IAAAA,UAVI;AAWJC,IAAAA,SAXI;AAYJC,IAAAA,KAZI;AAaJC,IAAAA,QAbI;AAcJC,IAAAA,OAdI;AAeJC,IAAAA,UAfI;AAgBJC,IAAAA,WAhBI;AAiBJC,IAAAA,YAjBI;AAkBJC,IAAAA,UAlBI;AAoBJC,IAAAA,UApBI;AAqBJC,IAAAA,WArBI;AAsBJC,IAAAA;AAtBI,MAuBFhC,UAAU,CAACG,WAAD,CAvBd,CAR4B,CAiC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,OAAjB;AAA0B,MAAA,QAAQ,EAAEqB,YAAY,CAACK,IAAb,CAAkB,IAAlB;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAEN,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,mCAAmBf,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAA,gBACGE,MAAM,CAACoB,GAAP,CAAW,CAAClB,IAAD,EAAOmB,KAAP,kBACV;AAAA,+BACE;AAAK,UAAA,OAAO,EAAE,MAAML,UAAU,CAACK,KAAD,CAA9B;AAAA,oBAAwCnB,IAAI,CAACoB;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF,SAAWpB,IAAI,CAACoB,IAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF,eAaE;AAAQ,MAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAA,gBACGb,MAAM,CAACgB,GAAP,CAAW,CAACG,KAAD,EAAQF,KAAR,kBACV;AAAA,+BACE;AAAA,oBAAME,KAAK,CAACD;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,SAAWC,KAAK,CAACD,IAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAdF,eAqBE;AAAA,6BACWpB,IADX,QACmBS,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA,kBADF;AA2BD,CArEM;;GAAMnB,Q;;KAAAA,Q;AAuEb,eAAeA,QAAf","sourcesContent":["import React, { useContext,useMemo, useState } from \"react\";\nimport { UserContext } from \"../context/core\";\nimport Select from \"react-select\";\nimport countryList from 'react-select-country-list'\n// import options from \"../context/countries\";\n\nexport const MainPage = () => {\n\n  const options = useMemo(() => countryList().getData(), [])\n\n  const changeHandler = value => {\n    setValue(value)\n  }\n\n  const {\n    todayCase,\n    setTodayCase,\n    cities,\n    setCities,\n    city,\n    setCity,\n    hotels,\n    setHotels,\n    country,\n    setCountry,\n    cityNames,\n    error,\n    setError,\n    weather,\n    setWeather,\n    SearchCovid,\n    handleChange,\n    searchCity,\n   \n    handleCity,\n    searchHotel,\n    searchWeather,\n  } = useContext(UserContext);\n\n  // const [todayCase, setTodayCase] = useState(\"\");\n  // const [cities, setCities] = useState([]);\n  // var cityNames = [];\n  // const [city, setCity] = useState(\"\");\n  // const [hotels, setHotels] = useState([]);\n  // const [country, setCountry] = useState(\"\");\n  // const [error, setError] = useState(\"\");\n  // const [weather, setWeather] = useState(\"\");\n\n  return (\n    <>\n      <Select options={options} onChange={handleChange.bind(this)} />\n\n      <button onClick={SearchCovid}>Search</button>\n      <h1>Today's Case: {todayCase}</h1>\n\n      <div>\n        {cities.map((city, index) => (\n          <span key={city.name}>\n            <div onClick={() => handleCity(index)}>{city.name}</div>\n          </span>\n        ))}\n      </div>\n      <button onClick={searchHotel}>SearchHotel</button>\n      <div>\n        {hotels.map((hotel, index) => (\n          <span key={hotel.name}>\n            <div>{hotel.name}</div>\n          </span>\n        ))}\n      </div>\n      <div>\n        temp in {city}: {weather}\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}