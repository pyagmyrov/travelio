{"ast":null,"code":"var _jsxFileName = \"/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport options from \"../context/countries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n\n  const [todayCase, setTodayCase] = useState(\"\");\n  const [cities, setCities] = useState([\"\"]);\n  const [country, setCountry] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const SearchCovid = () => {\n    // GET request using fetch with error handling\n    fetch(\"https://corona.lmao.ninja/v2/countries/\".concat(country + \"?yesterday=true\")).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      setTodayCase(data.todayCases);\n      searchCity();\n    }).catch(error => {\n      setError(error.toString());\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  const handleChange = e => {\n    setCountry(e.value);\n  };\n\n  const searchCity = () => {\n    fetch(\"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country), {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n        \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\"\n      }\n    }).then(async response => {\n      const data = await response.json();\n      setCities(data.suggestions[0].entities);\n      cities.map((city, index) => {\n        console.log(index, city.name);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const searchHotel = () => {\n    fetch(\"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country), {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n        \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\"\n      }\n    }).then(async response => {\n      const data = await response.json();\n      cities(data.suggestions[0].entities);\n      cities.map((city, index) => {\n        console.log(index, city.name);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: handleChange.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), console.log(country), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SearchCovid,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Today's Case: \", todayCase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: city.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n\n_s(MainPage, \"mnIFy9/SUizg2LxEL+ao7FWdTfo=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/yagmyrov/Dev/web-batborek/travelio/src/pages/MainPage.js"],"names":["React","useState","Select","options","MainPage","todayCase","setTodayCase","cities","setCities","country","setCountry","error","setError","SearchCovid","fetch","concat","then","response","data","json","ok","message","statusText","Promise","reject","todayCases","searchCity","catch","toString","console","handleChange","e","value","method","headers","suggestions","entities","map","city","index","log","name","err","searchHotel","bind"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport options from \"../context/countries\";\n\nexport const MainPage = () => {\n  const [todayCase, setTodayCase] = useState(\"\");\n  const [cities, setCities] = useState([\"\"]);\n  const [country, setCountry] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const SearchCovid = () => {\n    // GET request using fetch with error handling\n    fetch(\n      \"https://corona.lmao.ninja/v2/countries/\".concat(\n        country + \"?yesterday=true\"\n      )\n    )\n      .then(async (response) => {\n        const data = await response.json();\n\n        if (!response.ok) {\n          const error = (data && data.message) || response.statusText;\n          return Promise.reject(error);\n        }\n\n        setTodayCase(data.todayCases);\n        searchCity();\n      })\n      .catch((error) => {\n        setError(error.toString());\n        console.error(\"There was an error!\", error);\n      });\n  };\n\n\n  const handleChange = (e) => {\n    setCountry(e.value);\n  };\n\n  const searchCity = () => {\n    fetch(\n      \"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country),\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n          \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\",\n        },\n      }\n    )\n      .then(async (response) => {\n        const data = await response.json();\n        setCities(data.suggestions[0].entities);\n        cities.map((city, index) => {\n          console.log(index, city.name);\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const searchHotel = () => {\n    fetch(\n      \"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country),\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n          \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\",\n        },\n      }\n    )\n      .then(async (response) => {\n        const data = await response.json();\n        cities(data.suggestions[0].entities);\n        cities.map((city, index) => {\n          console.log(index, city.name);\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <>\n      <Select options={options} onChange={handleChange.bind(this)} />\n      {console.log(country)}\n      <button onClick={SearchCovid}>Search</button>\n      <h1>Today's Case: {todayCase}</h1>\n\n      {cities.map((city, index) => (\n        <h2>{city.name}</h2>\n      ))}\n    </>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}