{"ast":null,"code":"var _jsxFileName = \"/Users/yagmyrov/Dev/web-batborek/travelio/src/context/core.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\nfunction UserContextProvider(props) {\n  _s();\n\n  const [totalCase, setTotalCase] = useState(\"\");\n  const [totalActiveCase, setTotalActiveCase] = useState(\"\");\n  const [totalRecovered, setTotalRecovered] = useState(\"\");\n  const [totalDeath, setTotalDeath] = useState(\"\");\n  const [todayCase, setTodayCase] = useState(\"\");\n  const [todayActiveCase, setTodayActiveCase] = useState(\"\");\n  const [todayRecovered, setTodayRecovered] = useState(\"\");\n  const [todayDeath, setTodayDeath] = useState(\"\");\n  const [cities, setCities] = useState([]);\n  var cityNames = [];\n  const [city, setCity] = useState(\"\");\n  const [hotels, setHotels] = useState([]);\n  const [country, setCountry] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const SearchCovid = () => {\n    // GET request using fetch with error handling\n    fetch(\"https://corona.lmao.ninja/v2/countries/\".concat(country + \"?yesterday=true\")).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      setTodayCase(data.todayCases);\n      setTodayActiveCase(data.active);\n      setTodayDeath(data.todayDeaths);\n      setTodayRecovered(data.todayRecovered);\n      setTotalCase(data.cases);\n      setTotalActiveCase(data.active);\n      setTotalDeath(data.deaths);\n      setTotalRecovered(data.recovered);\n    }).catch(error => {\n      setError(error.toString());\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  const handleChange = e => {\n    setCountry(e.value);\n  };\n\n  const searchCity = () => {\n    fetch(\"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country), {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n        \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\"\n      }\n    }).then(async response => {\n      const data = await response.json();\n      setCities(data.suggestions[0].entities);\n      SearchCovid();\n      setCurrentPage(1);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const searchHotel = () => {\n    fetch(\"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(city), {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n        \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\"\n      }\n    }).then(async response => {\n      const data = await response.json();\n      setHotels(data.suggestions[1].entities);\n      hotels.map((hotel, index) => {\n        console.log(index, hotel.name);\n      });\n      searchWeather();\n      setCurrentPage(2);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const searchWeather = () => {\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city + \"&units=metric&appid=43b811164160ccdbae3ecc18fe414287\"), {\n      method: \"GET\"\n    }).then(async response => {\n      const data = await response.json();\n      setWeather(data.main.temp);\n      console.log(weather);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleCity = index => {\n    setCity(cities[index].name);\n    console.log(city);\n  };\n\n  const value = {\n    currentPage,\n    todayCase,\n    todayActiveCase,\n    todayRecovered,\n    todayDeath,\n    totalCase,\n    totalActiveCase,\n    totalRecovered,\n    totalDeath,\n    setTodayCase,\n    cities,\n    setCities,\n    city,\n    setCity,\n    hotels,\n    setHotels,\n    country,\n    setCountry,\n    cityNames,\n    error,\n    setError,\n    weather,\n    setWeather,\n    SearchCovid,\n    handleChange,\n    searchCity,\n    searchHotel,\n    searchWeather,\n    handleCity\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserContextProvider, \"EabNLnp2+HMfBTyv3/n0c3lvADQ=\");\n\n_c = UserContextProvider;\nexport default UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/Users/yagmyrov/Dev/web-batborek/travelio/src/context/core.js"],"names":["React","useState","createContext","UserContext","UserContextProvider","props","totalCase","setTotalCase","totalActiveCase","setTotalActiveCase","totalRecovered","setTotalRecovered","totalDeath","setTotalDeath","todayCase","setTodayCase","todayActiveCase","setTodayActiveCase","todayRecovered","setTodayRecovered","todayDeath","setTodayDeath","cities","setCities","cityNames","city","setCity","hotels","setHotels","country","setCountry","error","setError","weather","setWeather","currentPage","setCurrentPage","SearchCovid","fetch","concat","then","response","data","json","ok","message","statusText","Promise","reject","todayCases","active","todayDeaths","cases","deaths","recovered","catch","toString","console","handleChange","e","value","searchCity","method","headers","suggestions","entities","err","searchHotel","map","hotel","index","log","name","searchWeather","main","temp","handleCity","children"],"mappings":"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","sourcesContent":["import React, { useState, createContext } from \"react\";\nexport const UserContext = createContext();\n\n\nfunction UserContextProvider(props) {\n  const [totalCase,setTotalCase] = useState(\"\")\n  const[totalActiveCase,setTotalActiveCase] = useState(\"\");\n  const[totalRecovered,setTotalRecovered] = useState(\"\");\n  const [totalDeath,setTotalDeath] = useState(\"\");\n\n  const [todayCase, setTodayCase] = useState(\"\");\n  const [todayActiveCase,setTodayActiveCase] = useState(\"\");\n  const[todayRecovered,setTodayRecovered] = useState(\"\");\n  const [todayDeath,setTodayDeath] = useState(\"\");\n\n\n  const [cities, setCities] = useState([]);\n  var cityNames = [];\n  const [city, setCity] = useState(\"\");\n  const [hotels, setHotels] = useState([]);\n  const [country, setCountry] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  \n\n  const SearchCovid = () => {\n    // GET request using fetch with error handling\n    fetch(\n      \"https://corona.lmao.ninja/v2/countries/\".concat(\n        country + \"?yesterday=true\"\n      )\n    )\n      .then(async (response) => {\n        const data = await response.json();\n\n        if (!response.ok) {\n          const error = (data && data.message) || response.statusText;\n          return Promise.reject(error);\n        }\n        setTodayCase(data.todayCases);\n        setTodayActiveCase(data.active);\n        setTodayDeath(data.todayDeaths);\n        setTodayRecovered(data.todayRecovered);\n\n        setTotalCase(data.cases);\n        setTotalActiveCase(data.active);\n        setTotalDeath(data.deaths);\n        setTotalRecovered(data.recovered);\n        \n      })\n      .catch((error) => {\n        setError(error.toString());\n        console.error(\"There was an error!\", error);\n      });\n  };\n\n\n\n  const handleChange = (e) => {\n    setCountry(e.value);\n  };\n\n  const searchCity = () => {\n    fetch(\n      \"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(country),\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n          \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\",\n        },\n      }\n    )\n      .then(async (response) => {\n        const data = await response.json();\n        setCities(data.suggestions[0].entities);\n        SearchCovid();\n        setCurrentPage(1)\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const searchHotel = () => {\n    fetch(\n      \"https://hotels4.p.rapidapi.com/locations/search?query=\".concat(city),\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"61a532192dmshe4a97d8c6f89d54p10fee6jsn704ac1d1b9ac\",\n          \"x-rapidapi-host\": \"hotels4.p.rapidapi.com\",\n        },\n      }\n    )\n      .then(async (response) => {\n        const data = await response.json();\n        setHotels(data.suggestions[1].entities);\n        hotels.map((hotel, index) => {\n          console.log(index, hotel.name);\n        });\n        searchWeather();\n        setCurrentPage(2)\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const searchWeather = () => {\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(\n        city + \"&units=metric&appid=43b811164160ccdbae3ecc18fe414287\"\n      ),\n      {\n        method: \"GET\",\n      }\n    )\n      .then(async (response) => {\n        const data = await response.json();\n        setWeather(data.main.temp);\n        console.log(weather);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const handleCity = (index) => {\n    setCity(cities[index].name);\n    console.log(city);\n  };\n\n\n  const value = {\n\n      currentPage,\n   \n    todayCase,\n    todayActiveCase,\n    todayRecovered,\n    todayDeath,\n    totalCase,\n    totalActiveCase,\n    totalRecovered,\n    totalDeath,\n\n    setTodayCase,\n    cities,\n    setCities,\n    city,\n    setCity,\n    hotels,\n    setHotels,\n    country,\n    setCountry,\n    cityNames,\n    error,\n    setError,\n    weather,\n    setWeather,\n    SearchCovid,\n    handleChange,\n    searchCity,\n    searchHotel,\n    searchWeather,\n    handleCity,\n\n  };\n  return (\n    <UserContext.Provider value={value}>{props.children}</UserContext.Provider>\n  );\n}\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}